service: serverless-todo-app

frameworkVersion: '4'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: dev
  logs:
    restApi: true
    httpApi: true
  environment:
    TODOS_TABLE: Todos # ✅ Fixed to match your actual table name
    ATTACHMENT_S3_BUCKET: todo-attachments-${self:custom.accountId}-${self:provider.stage}
    SIGNED_URL_EXPIRATION: 300
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:${aws:region}:*:table/Todos # ✅ Updated to match real table
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:PutObjectAcl
          Resource:
            - arn:aws:s3:::todo-attachments-${AWS::AccountId}-${self:provider.stage}/*

functions:
  Auth:
    handler: src/auth/auth0Authorizer.handler

  GetTodos:
    handler: src/lambda/getTodos.handler
    events:
      - http:
          method: get
          path: todos
          authorizer:
            name: Auth
            resultTtlInSeconds: 300
          cors: true

  CreateTodo:
    handler: src/lambda/createTodo.handler
    events:
      - http:
          method: post
          path: todos
          authorizer: Auth
          cors: true

  UpdateTodo:
    handler: src/lambda/updateTodo.handler
    events:
      - http:
          method: patch
          path: todos/{todoId}
          authorizer: Auth
          cors: true

  DeleteTodo:
    handler: src/lambda/deleteTodo.handler
    events:
      - http:
          method: delete
          path: todos/{todoId}
          authorizer: Auth
          cors: true

  GenerateUploadUrl:
    handler: src/lambda/generateUploadUrl.handler
    environment:
      BUCKET_NAME: ${self:provider.environment.ATTACHMENT_S3_BUCKET}
      URL_EXPIRATION: ${self:provider.environment.SIGNED_URL_EXPIRATION}
    events:
      - http:
          method: post
          path: todos/{todoId}/attachment
          authorizer: Auth
          cors: true

plugins:
  - serverless-plugin-existing-s3

custom:
  accountId: ${aws:accountId}
  existingS3:
    buckets:
      - name: todo-attachments-${self:custom.accountId}-${self:provider.stage}
        allowBucketPolicy: true
        force: true

build:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    target: node18
    platform: node
    external:
      - aws-sdk
